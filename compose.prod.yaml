name: rj45

services:

  db:
    container_name: db
    image: 'postgres:16'
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - backend

  api:
    container_name: api
    image: 'ghcr.io/arkantrust/rj45-api:latest'
    restart: restart
    ports:
      - '8080:8080' # host:container
    environment:
      - DB_URL=postgresql://db/db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      - db
    networks:
      - backend
      - frontend

  analytics:
    container_name: analytics
    image: 'ghcr.io/arkantrust/rj45-analytics:latest'
    restart: restart
    ports:
      - '8000:8000' # host:container
    environment:
      - API_URL=http://api:8080
    depends_on:
      - db
      - api
    networks:
      - backend
      - frontend

  web:
    container_name: web
    image: 'ghcr.io/arkantrust/rj45-web:latest'
    restart: restart
    ports:
      - "80:80"
      - "443:443"
    environment:
      - API_URL=http://api:8080
      - ANALYTICS_URL=http://analytics:8000
      - NGINX_PORT=80
    depends_on:
      - api
      - analytics
    networks:
      - frontend

volumes:
  db:

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge